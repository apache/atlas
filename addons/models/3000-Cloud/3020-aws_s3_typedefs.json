{
    "structDefs": [
        {
            "name":        "aws_s3_bucket_lifeCycleRule",
            "serviceType": "aws",
            "typeVersion": "1.0",
            "description": "Atlas Type representing the life cycle rules for S3 object store bucket",
            "attributeDefs": [
                { "name": "ruleType",     "typeName": "string", "cardinality": "SINGLE", "isIndexable": true,  "isOptional": false, "isUnique": false },
                { "name": "days",         "typeName": "int",    "cardinality": "SINGLE", "isIndexable": false, "isOptional": false, "isUnique": false },
                { "name": "storageClass", "typeName": "string", "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true,  "isUnique": false }
            ]
        },
        {
            "name":        "aws_s3_access_policy",
            "serviceType": "aws",
            "typeVersion": "1.0",
            "description": "Atlas Type representing an access policy statement on an S3 bucket. Can later be fleshed out to represent the JSON structure of the statement.",
            "attributeDefs": [
                { "name": "policyString", "typeName": "string", "cardinality": "SINGLE", "isIndexable": true, "isOptional": false, "isUnique": false }
            ]
        }
    ],
    "entityDefs": [
        {
            "name":        "aws_s3_object",
            "superTypes":  [ "DataSet" ],
            "serviceType": "aws",
            "typeVersion": "1.0",
            "description": "Atlas Type representing an Object (file) in an S3 Object Store Bucket",
            "attributeDefs": [
                { "name": "dataType",        "typeName": "string",         "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true, "isUnique": false },
                { "name": "compressionType", "typeName": "string",         "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "awsTags",         "typeName": "array<aws_tag>", "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "createTime",      "typeName": "date",           "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true, "isUnique": false }
            ]
        },
        {
            "name":        "aws_s3_pseudo_dir",
            "description": "Atlas Type representing a Pseudo-Directory (prefix) in an S3 Object Store Bucket",
            "superTypes":  [ "DataSet","Path" ],
            "serviceType": "aws",
            "typeVersion": "1.1",
            "attributeDefs": [
                { "name": "objectPrefix",           "typeName": "string",         "cardinality": "SINGLE", "isIndexable": true,  "isOptional": false, "isUnique": true },
                { "name": "subdomain",              "typeName": "string",         "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true,  "isUnique": false },
                { "name": "subject",                "typeName": "string",         "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true,  "isUnique": false },
                { "name": "currentStorageLocation", "typeName": "string",         "cardinality": "SINGLE", "isIndexable": false, "isOptional": true,  "isUnique": false },
                { "name": "dataType",               "typeName": "string",         "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true,  "isUnique": false },
                { "name": "awsTags",                "typeName": "array<aws_tag>", "cardinality": "SINGLE", "isIndexable": false, "isOptional": true,  "isUnique": false },
                { "name": "createTime",             "typeName": "date",           "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true,  "isUnique": false }
            ]
        },
        {
            "name":        "aws_s3_bucket",
            "description": "Atlas Type representing a Bucket in an AWS S3 Object Store",
            "superTypes":  [ "DataSet" ],
            "serviceType": "aws",
            "typeVersion": "1.0",
            "attributeDefs": [
                { "name": "partner",           "typeName": "string",                             "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true, "isUnique": false },
                { "name": "domain",            "typeName": "string",                             "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true, "isUnique": false },
                { "name": "region",            "typeName": "string",                             "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "s3AccessPolicies",  "typeName": "array<aws_s3_access_policy>",        "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "isEncrypted",       "typeName": "boolean",                            "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "encryptionType",    "typeName": "string",                             "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "lifeCycleRules",    "typeName": "array<aws_s3_bucket_lifeCycleRule>", "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "awsTags",           "typeName": "array<aws_tag>",                     "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "cloudWatchMetrics", "typeName": "array<aws_cloud_watch_metric>",      "cardinality": "SINGLE", "isIndexable": false, "isOptional": true, "isUnique": false },
                { "name": "createtime",        "typeName": "date",                               "cardinality": "SINGLE", "isIndexable": true,  "isOptional": true, "isUnique": false }
            ]
        }
    ],
    "relationshipDefs": [
        {
            "name":                 "aws_s3_bucket_aws_s3_pseudo_dirs",
            "serviceType":          "aws",
            "typeVersion":          "1.0",
            "relationshipCategory": "COMPOSITION",
            "relationshipLabel":    "__aws_s3_bucket.pseudoDirectories",
            "propagateTags":        "ONE_TO_TWO",
            "endDef1": { "type": "aws_s3_bucket",     "name": "pseudoDirectories", "isContainer": true,  "cardinality": "SET",    "isLegacyAttribute": true },
            "endDef2": { "type": "aws_s3_pseudo_dir", "name": "bucket",            "isContainer": false, "cardinality": "SINGLE", "isLegacyAttribute": true }
        },
        {
            "name":                 "aws_s3_pseudo_dir_aws_objects",
            "serviceType":          "aws",
            "typeVersion":          "1.0",
            "relationshipCategory": "COMPOSITION",
            "relationshipLabel":    "__aws_s3_pseudo_dir.s3Objects",
            "propagateTags":        "ONE_TO_TWO",
            "endDef1": { "type": "aws_s3_pseudo_dir", "name": "s3Objects",       "isContainer": true,  "cardinality": "SET",    "isLegacyAttribute": true },
            "endDef2": { "type": "aws_s3_object",     "name": "pseudoDirectory", "isContainer": false, "cardinality": "SINGLE", "isLegacyAttribute": true }
        },
        {
            "name":                 "aws_s3_object_avro_schema",
            "serviceType":          "aws",
            "typeVersion":          "1.0",
            "relationshipCategory": "ASSOCIATION",
            "relationshipLabel":    "__aws_s3_object.avroSchema",
            "propagateTags":        "NONE",
            "endDef1": { "type": "aws_s3_object", "name": "avroSchema", "isContainer": false, "cardinality": "SINGLE", "isLegacyAttribute": true },
            "endDef2": { "type": "avro_schema",   "name": "s3Objects",  "isContainer": false, "cardinality": "SET" }
        },
        {
            "name":                 "aws_s3_pseudo_dir_avro_schema",
            "serviceType":          "aws",
            "typeVersion":          "1.0",
            "relationshipCategory": "ASSOCIATION",
            "relationshipLabel":    "__aws_s3_pseudo_dir.avroSchemas",
            "propagateTags":        "NONE",
            "endDef1": { "type": "aws_s3_pseudo_dir", "name": "avroSchemas",  "isContainer": false, "cardinality": "SET", "isLegacyAttribute": true },
            "endDef2": { "type": "avro_schema",       "name": "s3PseudoDirs", "isContainer": false, "cardinality": "SET" }
        }
    ]
}
